<File version="3.2">
  <Code><![CDATA[#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main
{
    #####################################################################################################
	#
	# CDR Desktop Info
	# Created On:  11/13/18
	# Script Name: CDRDesktopInfo.exe
	# 
    #====================================================================================================
	# Script designed to show relevant server info on the desktop of Windows Servers
    #
    # Version 0.0.0.1 	- 05/08/18 - Initial Creation
    # Version 1.0.0.0 	- 11/13/18 - Addition of fields and and adaptation to additional Win versions.
    # Version 2.0.0.0 	- 10/08/20 - Updated to use existing wallpaper on start up.
	#
	# All rights reserved - Do Not Redistribute
	#
	# Carl Roach, Technical Architect, CSM Transition Team
	# carl.roach@cerner.com
    #====================================================================================================
	# To Do List:
	#####################################################################################################
	
<#
.SYNOPSIS
App designed to display relevant computer info on the desktop.
 
.DESCRIPTION
This app on first run will ask you to configure computer info, and will skip the gui on subsequent launches.

.NOTES

 #>
	
	Param ([String]$Commandline)
	
	#--------------------------------------------------------------------------
	
	
	
	#--------------------------------------------------------------------------
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
    [string]$ScriptDirectory = Get-ScriptDirectory
    if (!(Test-Path "C:\CDRDesktopInfo"))
    {
        New-Item -Path "C:\CDRDesktopInfo" -ItemType Directory
    }
    
    $CDRDesktopInfoPath = "C:\CDRDesktopInfo\CDRDesktopInfo.exe"
    
    If (Test-Path "C:\CDRDesktopInfo\CDRDesktopInfo.exe")
	{
		$AppInstalledVersion = ((get-item "C:\CDRDesktopInfo\CDRDesktopInfo.exe").VersionInfo | select-object FileVersion).FileVersion
	}
	$AppCurrentVersion = $appversion
	If ($DesktopInfoPathTest -eq $False) { Show-MainForm_psf }
	elseif (($DesktopInfoPathTest -eq $True) -and ($UpdateCheck -eq $False)) { Show-MainForm_psf }
	elseif (($DesktopInfoPathTest -eq $True) -and ($UpdateCheck -eq $True) -and ($appcurrentversion -gt $AppInstalledVersion)) { Show-MainForm_psf }
	else { DesktopInfo }
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}]]></Code>
</File>